name: Run Tests
on:
  push:
    branches:
      - 'main'
      - 'feature/*'
env:
  DISCORD_WEBHOOK: " "
  # DB_NAME: ${{ secrets.PSCALE_DB_NAME }}
  # DB_USER: ${{ secrets.PSCALE_DB_USER }}
  # DB_HOST: ${{ secrets.PSCALE_DB_HOST }}
  # DB_PASSWORD: ${{ secrets.PSCALE_DB_PASSWORD }}
  DB_NAME: streaming_audio_test
  DB_USER: gh_actions
  DB_HOST: 127.0.0.1
  DB_PASSWORD: password

# Add cron job to ensure external webpages + apis have no changed
jobs:
  run_tests:
    strategy:
        fail-fast: false
        matrix:
          python-version: [3.8, 3.9]
          os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    name: coverage
    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: FedericoCarboni/setup-ffmpeg@v1
        id: setup-ffmpeg

      - name: Install Dependencies
        run: |
          python -m pip install -r requirements.txt
          python -m pip install -r requirements.dev.txt

      - uses: mirromutth/mysql-action@v1.1
        with:
          # host port: 3800 # Optional, default value is 3306. The port of host
          # container port: 3307 # Optional, default value is 3306. The port of container
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: streaming_audio_test # Optional, default value is "test". The specified database which will be create
          mysql root password: password  # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'gh_actions' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: password # Required if "mysql user" exists. The password for the "mysql user"

      - name: Coverage Report
        run:  |
          python -m coverage run -m unittest discover

      - name: Output Coverage
        run: |
          python -m coverage report
          python -m coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: coverage.xml
          flags: streaming_audio
          env_vars: PYTHON,OS
          fail_ci_if_error: true
