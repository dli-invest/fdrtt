# produce yaml file cron job
name: Test Transcribe
on:
  workflow_dispatch:
    inputs:
      youtube_url:
        description: 'Url to youtube video'     
        required: true
        default: 'https://www.youtube.com/watch?v=dp8PhLsUcFE' 
      iteration:
        description: 'Iteration number'
        required: false
        default: 1
      table_name:
        description: 'Table name for planetscale'
        required: false
        # default: 'YahooFinance'
  # push:
  #   branches:
  #     - 'main'
    paths-ignore:
      - "*.md"
      - "*.txt"

env:
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_LIVESTREAM_WEBHOOK }}
  WIT_AI_TOKEN: ${{ secrets.WIT_AI_TOKEN }}
  GH_WORKFLOW_TOKEN: ${{ secrets.GH_WORKFLOW_TOKEN }}
  DB_NAME: ${{ secrets.PSCALE_DB_NAME }}
  DB_USER: ${{ secrets.PSCALE_DB_USER }}
  DB_HOST: ${{ secrets.PSCALE_DB_HOST }}
  DB_PASSWORD: ${{ secrets.PSCALE_DB_PASSWORD }}
  MAX_ITERATIONS: 1
# Add cron job to ensure external webpages + apis have no changed

jobs:
  scrap_data:
    runs-on: ubuntu-latest
    name: transcribe video

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.4' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64'
      - name: Install Dependencies
        run: |
          python -m pip install -r requirements/requirements.txt
          python seed.py
      - uses: FedericoCarboni/setup-ffmpeg@v1
        # same as GITHUB_WORKSPACE 
        id: setup-ffmpeg

      - name: Where are files?
        run: ls

      - name: Set env vars
        run: |
          echo "ITERATION=${{ github.event.inputs.iteration }}" >> $GITHUB_ENV
          echo "YOUTUBE_URL=${{ github.event.inputs.youtube_url}}" >> $GITHUB_ENV
      
      - name: set table name if available
        if: "${{ github.event.inputs.table_name != '' }}"
        run: |
            echo "TABLE_NAME=${{ github.event.inputs.table_name }}" >> $GITHUB_ENV
            echo ${{ github.event.inputs.table_name }}
            export TABLE_NAME=${{ github.event.inputs.table_name }}

      - name: Transcribe with url
        if: "${{ github.event.inputs.youtube_url != '' }}"
        run: python transcript_manager.py --url "${{ github.event.inputs.youtube_url }}"

      # for master/main only use
      - name: Transcribe without url
        if: "${{ github.event.inputs.youtube_url == '' }}"
        run: python transcript_manager.py
        timeout-minutes: 310
        
      - name: Commit files
        run: |
          if [[ -z $(git status -s) ]]
          then
            echo "tree is clean"
          else
            git add . || true
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            echo "tree is dirty, please commit changes before running this"
            echo "PUSH_FILES=true" >> $GITHUB_ENV
            git config pull.rebase false || true
            git commit -m "Add changes" -a
            git merge -Xours main || true
            git pull origin main --strategy=ours || true
            git pull origin main || true
          fi
      - name: Test
        run: echo ${{ env.PUSH_FILES }}

